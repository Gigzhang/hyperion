language: python

python:
    - 2.6
    - 2.7
    - 3.4

env:
    # try all python versions with the latest stable Numpy
    - NUMPY_VERSION=1.8 ASTROPY_VERSION=0.4 SETUP_CMD='test' YT_VERSION=None

matrix:

    include:

        # try alternate Numpy versions
        - python: 2.7
          env: NUMPY_VERSION=1.6 ASTROPY_VERSION=0.4 SETUP_CMD='test' YT_VERSION=None
        - python: 2.7
          env: NUMPY_VERSION=1.5 ASTROPY_VERSION=0.4 SETUP_CMD='test' YT_VERSION=None

        # try with yt
        - python: 2.7
          env: NUMPY_VERSION=1.8 ASTROPY_VERSION=0.4 SETUP_CMD='test' YT_VERSION=3.0.1
        - python: 2.7
          env: NUMPY_VERSION=1.8 ASTROPY_VERSION=0.4 SETUP_CMD='test' YT_VERSION=2.6

before_install:

   # Add 'saucy' repositories to get latest HDF5 version
   - sudo apt-add-repository 'deb http://archive.ubuntu.com/ubuntu/ saucy main universe'

   # Linux packages
   - sudo apt-get update
   - sudo apt-get install build-essential g++
   - sudo apt-get install mpich2 libmpich2-dev libhdf5-7 libhdf5-dev gfortran hdf5-tools

   # Python packages
   - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
   - chmod +x miniconda.sh
   - ./miniconda.sh -b
   - export PATH=/home/travis/miniconda/bin:$PATH
   - conda update --yes conda

install:
   - conda create --yes -n test python=$TRAVIS_PYTHON_VERSION
   - source activate test
   - conda install -c astropy-ci-extras --yes numpy=$NUMPY_VERSION h5py astropy=$ASTROPY_VERSION
   # The following logic is temporary until 3.0.1 is in conda
   - if [[ $YT_VERSION == 2.6 ]]; then conda install --yes numpy=$NUMPY_VERSION yt=$YT_VERSION; fi
   - if [[ $YT_VERSION == 3.0.1 ]]; then conda install --yes numpy=$NUMPY_VERSION matplotlib h5py cython sympy; fi
   - if [[ $YT_VERSION == 3.0.1 ]]; then pip install yt==$YT_VERSION; fi

script:
   - ./configure
   - make serial
   - sudo make install
   - python setup.py install  # to get the hyperion script installed
   - python setup.py $SETUP_CMD
